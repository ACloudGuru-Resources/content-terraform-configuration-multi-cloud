{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploying a VM in AWS Using the Terraform Workflow",
    "Parameters": {
        "LatestAmiId": {
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
        }
    },
    "Resources": {
        "IGW":{
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags":[
                    {"Key": "Name", "Value": "Terraform-Lab-IGW"}
                ]
            }
        },
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "CidrBlock": "10.0.0.0/16",
                "Tags": [
                    {
                        "Key": "Name", "Value": {"Ref": "AWS::StackName" }
                    },
                    {
                        "Key": "Purpose","Value": "Terraform-Lab-VPC"
                    }
                ]
            }
        },
        "IGWAttach": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {"Ref":"VPC"},
                "InternetGatewayId": {"Ref":"IGW"}
            }
        },
        "RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref":"VPC"}
            }
        },
        "InternetRoute":{
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {"Ref":"IGW"},
                "RouteTableId": {"Ref":"RouteTable"}
            }
        },
        "SubnetRouteAssociationA":{
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {"Ref":"RouteTable"},
                "SubnetId": {"Ref":"SubnetA"}
            }
        },
        "SG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SG for Terraform Lab",
                "VpcId": {"Ref" : "VPC"},
                "Tags":[
                    {
                        "Key": "Name", "Value": "Terrafor-Lab-SG"
                    }
                ]
            }

        },
        "SubnetA":{
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {"Ref":"VPC"},
                "AvailabilityZone": {"Fn::Select": ["0", { "Fn::GetAZs" : {"Ref" : "AWS::Region"}} ]},
                "CidrBlock": "10.0.1.0/24",
                "Tags":[
                    {
                        "Key": "Name","Value":"SubnetA"
                    }
                ],
                "MapPublicIpOnLaunch": true
            }
        },
        "EC2SecurityIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "FromPort": 22,
                "GroupId": {"Fn::GetAtt": ["SG", "GroupId"]},
                "ToPort": 22,
                "CidrIp": "0.0.0.0/0",
                "IpProtocol": "tcp"
            }
        },
        "TerraformRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": "/",
                "RoleName": "TerraformRole",
                "AssumeRolePolicyDocument":{
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": ["ec2.amazonaws.com"]
                            }
                        }
                    ]
                },
                "Policies":[
                    {
                        "PolicyName": "CustomPolicyLab",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Sid": "Stmt1591121535953",
                                "Action": [
                                    "ec2:*"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                        }
                    ]
                }
            }
        ]
    }
},
"EC2InstanceProfile":{
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {"Ref":"TerraformRole"}
                ]
            }
        },
        "TerraformController":{
            "Type": "AWS::EC2::Instance",
            "CreationPolicy": {
				"ResourceSignal": {
					"Count": "1",
					"Timeout": "PT12M"
				}
			},
            "Properties": {
                "ImageId": "%ami-203%",
                "InstanceType": "t3.micro",
                "Tags":[
                    {
                        "Key": "Name", "Value": "TerraformController"
                    }
                ],
                "SecurityGroupIds": [
                    {"Ref": "SG" }
                ],
                "IamInstanceProfile":{ "Ref": "EC2InstanceProfile" },
                "SubnetId": {"Ref":"SubnetA"},
                "UserData": {"Fn::Base64":{ 
                    "Fn::Join": [
                    "",
                    [
                        "#!/bin/bash\n",
                        "yum -y install git wget jq unzip yum-utils\n",
                        "yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo\n",
                        "yum -y install terraform\n",
                        "rpm --import https://packages.microsoft.com/keys/microsoft.asc\n",
                        "wget https://raw.githubusercontent.com/ACloudGuru-Resources/content-terraform-configuration-multi-cloud/main/azure-cli.repo\n",
                        "mv azure-cli.repo /etc/yum.repos.d/\n",
                        "yum -y install azure-cli\n",
                        "echo '%password%' | sudo passwd --stdin cloud_user\n",
                        "sudo service sshd restart\n",
                        "sudo -iu cloud_user aws configure set default.region ",
                        {"Ref": "AWS::Region"},
                        "\n",
                        "chown -R cloud_user:cloud_user /home/cloud_user/lab_code\n",
                        "su - cloud_user -c 'cd /home/cloud_user/'\n",
                        "echo 'ami: '",
                        {"Ref":"LatestAmiId"},
                        ">> /home/cloud_user/resource_ids.txt\n",
                        "echo 'subnet_id: '",
                        {"Ref": "SubnetA"},
                        ">> /home/cloud_user/resource_ids.txt\n",
                        "/opt/aws/bin/cfn-signal --exit-code 0 --resource TerraformController --region ",
						{
							"Ref": "AWS::Region"
						},
						" ",
						"--stack ",
						{
							"Ref": "AWS::StackName"
						}
                    ]
                ]
                }
            }
            }
        }
    },
    "Outputs": {
        "pubIpAddress1":{
            "Description": "Terraform-Controller",
            "Value": {"Fn::GetAtt": ["TerraformController", "PublicIp"]}
        }
    }
}